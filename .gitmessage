## Git Commit Messages

# - Use the Present Tense ("Add feature" not "Added feature").
# - Use the Imperative Mood ("Move cursor to..." not "Moves cursor to...").
# - Limit the subject line to 50 characters
# - Wrap the body at 72 characters
# - Reference issues and pull requests
# - When only changing documentation, include `[ci skip]` in the commit description
# - Be creative with emojies

# ==== Emojis ====
# - :tada: `:tada:` Initial commit
# - :art: `:art:` when improving the format/structure of the code
# - :racehorse: `:racehorse:` when improving performance
# - :books: `:books:` when writing docs
# - :pencil2: `:pencil2:` when fixing typos
# - :bug: `:bug:` when fixing a bug
# - :fire: `:fire:` when removing code or files
# - :green_heart: `:green_heart:` when fixing the CI build
# - :white_check_mark: `:white_check_mark:` when adding tests
# - :lock: `:lock:` when dealing with security
# - :arrow_up: `:arrow_up:` when upgrading dependencies
# - :arrow_down: `:arrow_down:` when downgrading dependencies
# - :shirt: `:shirt:` when removing linter warnings
# - :construction: `:construction:` work in progress
# - :sparkles: `:sparkles:` when adding feature
# - :lipstick: `:lipstick:` when improving UI
# - :gem: `:gem:` new release
# - :rocket: `:rocket:` Anything related to Deployments/DevOps
#
# How to Write a Git Commit Message http://chris.beams.io/posts/git-commit/
